name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ecommerce
          MYSQL_USER: ecommerce_user
          MYSQL_PASSWORD: ecommerce_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Go modules cache
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Install oapi-codegen
        run: go install github.com/deepmap/oapi-codegen/cmd/oapi-codegen@latest

      - name: Install golang-migrate
        run: go install -tags 'mysql' github.com/golang-migrate/migrate/v4/cmd/migrate@latest

      - name: Install wire
        run: go install github.com/google/wire/cmd/wire@latest

      - name: Generate code (api)
        run: |
          cd backend-api
          mkdir -p internal/shared/presentation/rest/openapi
          oapi-codegen -config oapi-codegen-config.yaml openapi.yaml

      - name: Generate code (bob)
        run: |
          cd backend-api
          # Run database migrations
          migrate -path migrations -database "mysql://ecommerce_user:ecommerce_password@tcp(localhost:3306)/ecommerce" up

          # Generate models
          MYSQL_DSN="ecommerce_user:ecommerce_password@tcp(localhost:3306)/ecommerce" go run github.com/stephenafamo/bob/gen/bobgen-mysql@latest -c bobgen.yaml

      - name: Generate code (wire)
        run: |
          cd backend-api
          wire ./...

      - name: Test (api)
        run: |
          cd backend-api
          go test -v ./...

      - name: Test (image-processor)
        run: |
          cd backend-image-processor
          go test -v ./...

  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: NPM cache (customer)
        uses: actions/cache@v3
        with:
          path: frontend-customer/node_modules
          key: ${{ runner.os }}-npm-customer-${{ hashFiles('frontend-customer/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-customer-

      - name: NPM cache (admin)
        uses: actions/cache@v3
        with:
          path: frontend-admin/node_modules
          key: ${{ runner.os }}-npm-admin-${{ hashFiles('frontend-admin/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-admin-

      - name: Install dependencies (customer)
        run: |
          cd frontend-customer
          npm ci

      - name: Install dependencies (admin)
        run: |
          cd frontend-admin
          npm ci

      - name: Lint (customer)
        run: |
          cd frontend-customer
          npm run lint

      - name: Lint (admin)
        run: |
          cd frontend-admin
          npm run lint
