name: Frontend Deploy

on:
  push:
    branches: [main]
    paths:
      - "frontend/**"
  pull_request:
    branches: [main]
    paths:
      - "frontend/**"
  workflow_dispatch: # 手動トリガー用

jobs:
  build-and-deploy:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Run linting
        run: |
          cd frontend
          npm run lint

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Terraformのセットアップを追加
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5

      - name: Initialize Terraform
        run: |
          cd terraform
          terraform init

      - name: Deploy to S3
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        run: |
          # Get S3 bucket name from Terraform output
          cd terraform
          S3_BUCKET=$(terraform output -raw frontend_bucket_name)
          cd ..

          # Deploy to S3
          aws s3 sync frontend/out/ s3://$S3_BUCKET/ --delete

      - name: Invalidate CloudFront cache
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        run: |
          # Get CloudFront distribution ID from Terraform output
          cd terraform
          CLOUDFRONT_ID=$(terraform output -raw cloudfront_distribution_id)
          cd ..

          # Invalidate CloudFront cache
          aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*"
