services:
  # バックエンドAPI (Go Echo)
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend:/app
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=ecommerce
      - DB_PASSWORD=password
      - DB_NAME=ecommerce
      - AWS_ENDPOINT=http://localstack:4566
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    depends_on:
      - mysql
      - localstack
    networks:
      - app-network

  # MySQL データベース
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=ecommerce
      - MYSQL_USER=ecommerce
      - MYSQL_PASSWORD=password
    volumes:
      - mysql-data:/var/lib/mysql
      - ./backend/scripts/init-db:/docker-entrypoint-initdb.d
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password

  # PhpMyAdmin
  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "80:80"
    environment:
      PMA_ARBITRARY: 1
      PMA_HOSTS: mysql
      PMA_USER: ecommerce
      PMA_PASSWORD: password
    volumes:
      - ./docker/volumes/phpmyadmin/sessions:/sessions
    depends_on:
      - mysql
    networks:
      - app-network

  # フロントエンド (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    depends_on:
      - api
    networks:
      - app-network

  # AWS サービスエミュレーター (LocalStack)
  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,cloudwatch,logs,xray,sqs,sns
      - DEBUG=${DEBUG-}
      - PERSISTENCE=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    volumes:
      - ./infra/localstack:/docker-entrypoint-initaws.d
      - localstack-data:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
  localstack-data:
